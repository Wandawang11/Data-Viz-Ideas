{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Enterprise Toronto Pilot Project\"\nauthor: \"MaRS Data Catalyst\"\ndate: '2017-11-26'\noutput: word_document\n---\n\n```{r setup, include=FALSE}\n\nknitr::opts_chunk$set(echo = TRUE)\n\n# for data manipulation\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(rmarkdown)\n\n# for formatting \nlibrary(ggplot2)\n#library(ggthemes)\nlibrary(stringr)\n\nsetwd(\"/Users/wwang/Box Sync/MDC Shared/Innovation Economy/Partnerships/SBEC/R codes\")\n\n# load the consultation data\nif(!exists(\"data_consul\")) {\n  data_consul <- read.csv('ET-Consultation Data(June2017).csv',\n                   header = TRUE,\n                   na.strings=c(\"\",\"NA\"))\n}  \n\n# load the business registration data (the July data is loaded here as the June data doesn't have CRA numbers)\nif(!exists(\"data_busreg\")) {\n  data_busreg <- read.csv('ET-BizRegistration Data(July2017).csv',\n                   header = TRUE,\n                   na.strings=c(\"\",\"NA\"))\n}  \n\n# load the follow-up data\nif(!exists(\"data_followup\")) {\n  data_followup <- read.csv('ET-ClientFollowUp(June2017).csv',\n                   header = TRUE,\n                   na.strings=c(\"\",\"NA\"))\n}  \n\n```\n\n\n```{r Connect to MDC db, load quarterly data}\n\n# connect to the database, load the quarterly data\n\nMDC_db_connection <- function(user, database = 'MaRSDataCatalyst', server = '10.101.2.74', type = 'sqlserver', port = '1433', domain = 'MARSDD', useNTLMv2 = TRUE, password = getPass::getPass()){\n  \n  properties <- list(user = user, domain = domain, useNTLMv2 = useNTLMv2, password = password)\n  \n  connection <- DBI::dbConnect(RSQLServer::SQLServer(),\n                               server = server,\n                               file = '',\n                               database = database,\n                               type = type,\n                               port = port,\n                               properties = properties)\n  \n  return(connection)\n  \n}\n\nMDC_db_query <- function(user, server = '10.101.2.74', database = 'MaRSDataCatalyst', query = NULL, table = NULL, path = NULL, multi = NULL){\n  \n  #Get named list of queries\n  all_queries_list <- name_query_list(query = query, table = table, path = path, multi = multi)\n  \n  #Get list of raw SQL queries\n  all_queries <- mapply(FUN = process_query, query = all_queries_list, query_type = names(all_queries_list))\n  \n  #Get DB connection\n  connection <- MDC_db_connection(user = user, server = server, database = database)\n  \n  #Use query and connection to get result set and return it\n  all_results <- mapply(FUN = get_db_query_results, query = all_queries, MoreArgs = c(connection = connection), SIMPLIFY = FALSE)\n  \n  if(length(all_results) == 1){\n    return(all_results[[1]])\n  } else{\n    return(all_results)\n  }\n  \n}\n\nname_query_list <- function(query, table, path, multi){\n  \n  #Check to make sure at least one query type supplied\n  if(is.null(c(query, path, table, multi))){\n    stop('Must supply at least one of query, table or file path to query file')\n  }\n  \n  #Set names for each variable vector\n  if (!is.null(query)){\n    names(query) <- rep('query', times = length(query))\n  }\n  \n  if(!is.null(table)){\n    names(table) <- rep('table', times = length(table))\n  }\n  \n  if(!is.null(path)){\n    names(path) <- rep('path', times = length(path))\n  }\n  \n  #Return the full named list\n  return(c(query, table, path, multi))\n}\n\nprocess_query <- function(query, query_type){\n  \n  if(query_type == 'query'){\n    return(query)\n  }\n  else if(query_type == 'table'){\n    return(paste('SELECT * FROM', query))\n  }\n  else if(query_type == 'path'){\n    return(get_sql_file_string(query))\n  }\n  else{\n    stop('Can only have list names as query, table or path')\n  }\n}\n\nget_db_query_results <- function(connection, query){\n  \n  #Send query to connection\n  result <- DBI::dbSendQuery(connection, query)\n  \n  #Fetch data from results and return them\n  suppressWarnings(data <- DBI::dbFetch(result))\n  return(data)\n  \n}\n\nget_sql_file_string <- function(path){\n  \n  #Check if file is SQL file\n  if(!grepl('.sql$', path)){\n    warning('File path is not an SQL file')\n  }\n  \n  #Creates query string from file path and returns it\n  query <- readChar(con = path,nchar = file.info(path)$size)\n  return(query)\n}\n\n# get the FY17 Q2 - FY18 Q1 data from db\nif (!exists('data_comp_qtly')) {\n  data_comp_qtly.df <- MDC_db_query(user = \"wwang\",\n                                    query = \"SELECT *\n                                             FROM [Reporting].[vRICCompanyLegible_viz]\n                                             WHERE FiscalYear IN (2017, 2018) \n                                              \tAND NOT(FiscalYear = 2017 AND FiscalQuarter = 1)\n                                              \tAND NOT(FiscalYear = 2018 AND FiscalQuarter = 2)\n                                      \")\n}\n  \n# to get the CRA numbers\nif (!exists('data_comp_qtly_cra')) {\n  data_comp_qtly_cra.df <- MDC_db_query(user = \"wwang\",\n                                    query = \"\nSELECT DISTINCT CRABusinessNumber,\n\t   REPLACE(\n\t\t\tREPLACE(\n\t\t\t\tREPLACE(CRABusinessNumber, '#', '')\n\t\t\t\t\t, ' ', '')\n\t\t\t\t\t\t, 'BN', '')\n\t    as CRABusinessNumber_Clean\n  FROM Config.MaRSMaster\n WHERE CRABusinessNumber IS NOT NULL \n\tAND CRABusinessNumber != ''\n\tAND CRABusinessNumber NOT LIKE '%NA%' \n\tAND CRABusinessNumber NOT LIKE '%n/a%' \n\tAND CRABusinessNumber NOT LIKE '%not%' \n\tAND CRABusinessNumber NOT LIKE '0'\n                                      \")\n}\n  \n\n\n#if (!exists('data_qtly_demo')) {\n#  data_comp_qtly.df <- MDC_db_query(user = \"wwang\",\n#                                    query = \"SELECT *\n#                                             FROM [Reporting].[vFounderDemogClassed_viz]\n#                                             WHERE SurveyYear = 2017\n#                                      \")\n#  \n#}\n#\n\n```\n\n## 1. Analysis on the Enterprise Toronto data portfolio\n\nIntroduction:\n\nThis data is from roughly July 1st, 2016 to June 30th, 2017 (July 14 notes during call with Chris Rickett to review data: - The data sent includes every client in the last 12 months and is a pull from salesforce)\n\nTherefore the equivalent of MaRS data is BAP Quarterly... since it shows all the clients helped in the past year - FY17 Q2 - FY18 Q1\n\n```{r echo=False}\n\ndata_consul_missing <- data_consul %>%\n  select(-SystemModstamp, -OwnerId, -LastModifiedById, \n         -LastModifiedDate, -IsDeleted, -CreatedDate,\n         -CreatedById, -ConvertedPersonToBusiness__c,\n         -Contact_Consultation__c, -Id, -Name,\n         -Followup_Completed_within_30_days__c,\n         -ET_Consultant__c, -Satisfaction_FollowUp__c, \n         -Service_Requested__c, -Enterprise_Toronto_Location__c,\n         -How_did_you_hear_about_ET__c) %>%\n  rename(Age = Age__c,\n         Assistance_Request = Assistance_Request__c,\n         Business_Registration = Business_Registration__c,\n         Business_Sector = Business_Sector__c,\n         Business_Status = Business_Status__c,\n         Business_Sub_Sector = Business_Sub_Sector__c,\n         Confidence_Rating = Confidence_Rating__c,\n         Describe_your_Challenge = Describe_your_Challenge__c,\n         DeskCaseID = DeskCaseID__c, \n         Do_You_Plan_To_Start_Your_Business = Do_You_Plan_To_Start_Your_Business_SS1__c,\n         Employment_Status = Employment_Status__c,\n         ET_Client_Status = ET_Client_Status__c,\n         ET_Follow_Up_Survey_Completed = ET_Follow_Up_Survey_Completed__c,\n         ET_to_contact_to_Discuss_Assistance = ET_to_contact_to_Discuss_Assistance_SS1__c,\n         ET_to_do_a_story_on_your_Business_Exist = ET_to_do_a_story_on_your_Business_Exist__c,\n         ET_to_do_a_story_on_your_Business = ET_to_do_a_story_on_your_business__c,\n         Expected_Start_Date = Expected_Start_Date__c,\n         Gender = Gender__c,\n         Have_you_Hired_Additional_Staff = Have_you_Hired_Additional_Staff_SS2__c,\n         Hired_Staff_since_engaged_ET = Hired_Staff_since_engaged_ET_SS3__c,\n         How_did_ET_help = How_did_ET_help__c,\n         How_did_ET_help_Existing = How_did_ET_help_Existing__c,\n         How_Many_People_Work_in_Business = How_Many_People_Work_in_Business_SS2__c,\n         If_Yes_How_Many_Additional = If_Yes_How_Many_Additional_2__c,\n         How_Many_Additional_Staff = How_Many_Additional_Staff_SS2__c,\n         Import_or_Export = Import_or_Export__c,\n         Increased_Financing_Since_Engaged_ET = Increased_Financing_Since_Engaged_ET_SS3__c,\n         Increased_Revenue_Since_Engaged_ET = Increased_Revenue_Since_Engaged_ET_SS3__c,\n         Is_there_anything_else_ET_can_help_with = Is_there_anything_else_ET_can_help_with__c,\n         Moved_to_a_Larger_Location = Moved_to_a_Larger_Location_SS3__c,\n         Number_of_Employees = Number_Of_Employees__c,\n         Number_of_Years_In_Business = Number_of_Years_In_Business__c,\n         Hire_New_Staff_in_Next_6_Months = Hire_New_Staff_in_Next_6_Months_SS2__c,\n         Plan_To_Start_in_the_Next_Year = Plan_To_Start_in_the_Next_Year_SS1__c,\n         Hire_New_Staff_in_Next_6_Months2 = Hire_New_Staff_in_Next_6_Months_SS3__c,\n         Rating_on_Service = Rating_on_Service__c,\n         Recommend_Enterprise_Toronto = Recommend_Enterprise_Toronto__c,\n         Referred_to = Referred_To__c,\n         Satisfaction_Survey_Completed = Satisfaction_Survey_Completed__c,\n         Since_Engaging_ET_did_you_Start = Since_Engaging_ET_did_you_Start_SS2__c,\n         Status_of_Your_Business = Status_of_Your_Business__c,\n         Where_can_ET_Improve = Where_can_ET_Improve__c\n         )\n\n# visualize missingness\nggplot_missing <- function(x){\n  \n  x %>% \n    is.na %>%\n    reshape2::melt() %>%\n    ggplot(data = .,\n           aes(x = Var2,\n               y = Var1)) +\n    geom_raster(aes(fill = value)) +\n  #  coord_flip() +\n    scale_fill_grey(name = \"\",\n                    labels = c(\"Present\",\"Missing\")) +\n    theme_minimal() + \n    theme(axis.text.x  = element_text(angle=90, vjust=0.5, size = 10), \n          legend.position = \"none\") +\n    labs(x = \"Variables\",\n         y = \"Observations\") + \n  scale_fill_manual(values = c(\"red\", NA)) \n  }\n\nggplot_missing(data_consul_missing)\n\n```\n\n\n###  A. Who is served\n```{r Business Status, echo = FALSE}\n\ntbl_busStatus <- data_consul %>%\n  select(Business_Status__c) %>%\n  filter(Business_Status__c != '') %>%\n  group_by(Business_Status__c) %>%\n  summarize(NumberOfClients = n()) %>%\n  mutate(Percentage = NumberOfClients / sum(NumberOfClients))\n  \n# GET THE N NUMBER FOR ALL VISUALIZATIONS\n```\n\n\nThe industry in the ONE taxonomy - all sectors suppose to be IT heavy n non-service based. Service based = Other\n\n```{r industry, echo=FALSE}\n\n### Qs:\n#### 1. Do we want to rename the Business Sectors?\n#### 2. How are we dealing with Nulls? As an Other sector already exists\n\n# Clean and summarize industry data\nconsul_ind <- data_consul %>%\n  rename(BusinessSector = Business_Sector__c) %>%\n  select(BusinessSector) %>% \n  group_by(BusinessSector) %>% \n  summarise(NumberOfCompanies = n()) %>%\n  arrange(desc(NumberOfCompanies)) %>%\n  mutate(BusinessSector = gsub('[[:digit:]]+', '', BusinessSector), \n         BusinessSector = gsub(' - ', '', BusinessSector),\n         BusinessSector = gsub('-', '', BusinessSector)) %>%\n  filter(!(BusinessSector == \"\")) %>%\n  mutate(Percentage = NumberOfCompanies / sum(NumberOfCompanies)) %>%\n  mutate(Percentage = paste(round(100*Percentage, 0), \"%\", sep=\"\")) #%>%\n # mutate(BusinessSector = gsub('Administrative', 'Admin', BusinessSector),\n #        BusinessSector = gsub('Management', 'Mgmt', BusinessSector),\n #        BusinessSector = gsub('and', '&', BusinessSector),\n #        BusinessSector = gsub('Services', 'Svcs', BusinessSector))\n\nwrite.csv(consul_ind, 'Industry.csv', row.names = FALSE)\n\n# plotting\nggplot(data = consul_ind, \n       aes(x = reorder(BusinessSector, NumberOfCompanies), \n           y = NumberOfCompanies)) +\n  tiff('test.tiff', units=\"in\", width=5, height=5, res=1200) +\n  coord_flip() +\n  geom_bar(width=0.85, stat=\"identity\", fill = \"#FFA78C\") +\n  geom_text(aes(x = reorder(BusinessSector, NumberOfCompanies), \n                y = NumberOfCompanies,\n                label = Percentage,\n                hjust=ifelse(sign(NumberOfCompanies)>0, 0, 1))) + \n  labs(x = '', y = '') +\n  #ggtitle(\"Distribution of Clients by Business Sectors\") +\n  #scale_x_discrete() +\n  theme(plot.title = element_text(face='bold'), \n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank(),\n        axis.text = element_text(face=\"bold\"),\n        axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 10),\n        axis.text.y = element_text(size = 10, margin = margin(t = 0, r = -5, b = 0, l = 0))) \n  \ndev.off()\n\n# 1. bold axis names? \n# 2. edit name for each industry?\n\n# comparing SBEC ind to Qtly ind\nqtly_ind <- data_comp_qtly.df %>%\n  select(CompanyID, LongIndustryName) %>%\n  distinct() %>%\n  group_by(LongIndustryName) %>%\n  summarize(NumberOfCompanies = n()) %>%\n  filter(!is.na(LongIndustryName)) %>%\n  mutate(Percentage = NumberOfCompanies / sum(NumberOfCompanies)) %>%\n  mutate(Percentage = paste(round(100*Percentage, 1), \"%\", sep=\"\"))\n\n# plotting\nggplot(data = qtly_ind, \n       aes(x = reorder(LongIndustryName, NumberOfCompanies), \n           y = NumberOfCompanies)) +\n  coord_flip() +\n  geom_bar(stat=\"identity\", fill = \"#FF907B\") +\n  geom_text(aes(x = reorder(LongIndustryName, NumberOfCompanies), \n                y = NumberOfCompanies,\n                label = NumberOfCompanies,\n                hjust=ifelse(sign(NumberOfCompanies)>0, -0.2, 1))) + \n  labs(y = 'Number of Companies') +\n  ggtitle(\"Distribution of Clients by Industry\") +\n  theme(plot.title = element_text(face='bold'), \n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank(),\n        axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 10)) #,\n       # axis.text.y = element_text(size = 10, margin = margin(t = 0, r = -5, b = 0, l = 0)))\n\n\n```\n\n###  -  Founder Age\n\n# For the qtly stuff, will need to join to a demographics view\n\n```{r age, echo=FALSE}\n\n# Founder Age\n\n# Data preparation\nconsul_age <- data_consul %>%\n  rename(Age = Age__c) %>% \n  select(Age) %>%\n  group_by(Age) %>%\n  summarise(NumberOfCompanies = n()) %>%\n  arrange(desc(NumberOfCompanies)) %>%\n  filter(!(Age == \"\")) %>%\n  mutate(Percentage = NumberOfCompanies / sum(NumberOfCompanies)) %>%\n  mutate(Percentage = paste(round(100*Percentage, 1), \"%\", sep=\"\"))\n\nwrite.csv(consul_age, \"Age.csv\")\n\n# Plotting\nggplot(data = consul_age, \n       aes(x = Age, \n           y = NumberOfCompanies)) +\n  coord_flip() +\n  geom_bar(stat=\"identity\", fill = \"#FF907B\") +\n  scale_x_discrete(limits=c(\"> 50\", \"40 to 49\", \n                            \"30 to 39\", \"19 to 29\",\n                            \"< 18\")) +\n  geom_text(aes(x = Age, \n                y = NumberOfCompanies,\n                label = NumberOfCompanies,\n                hjust=ifelse(sign(NumberOfCompanies)>0, -0.2, 1))) + \n  labs(x = 'Number of Companies', y = 'Founder Age') +\n  ggtitle(\"Distribution of Business Founder by Age Groups\") +\n  theme(plot.title = element_text(face='bold'), \n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank(),\n        axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 10),\n        axis.text.y = element_text(size = 10, margin = margin(t = 0, r = -5, b = 0, l = 0)))\n        \n# Q: how to size the chart in the final Word output?\n# need to make y-axis labels bold\n# need to reorder the y-axis labels\n```\n\n###  -  Founder Gender\n\n```{r gender, echo=FALSE}\n\n# Data prep\nconsul_gender <- data_consul %>%\n  rename(Gender = Gender__c) %>%\n  select(Gender) %>%\n  group_by(Gender) %>%\n  summarise(NumberOfCompanies = n()) %>%\n  filter(!(Gender == '')) %>%\n  mutate(Percentage = (NumberOfCompanies / sum(NumberOfCompanies))) %>%\n  mutate(Percentage = paste(round(100*Percentage, 0), \"%\", sep=\"\"))\n\n# Plotting\nggplot(data = consul_gender, \n       aes(x = Gender, \n           y = NumberOfCompanies)) +\n  coord_flip() +\n  geom_bar(stat=\"identity\", fill = \"#FEBE10\") +\n  geom_text(aes(x = Gender, \n                y = NumberOfCompanies,\n                label = NumberOfCompanies,\n                hjust=ifelse(sign(NumberOfCompanies)>0, -0.2, 1))) + \n  labs(x = 'Number of Companies', y = 'Founder Gender') +\n  ggtitle(\"Distribution of Clients by Founder Gender\") +\n  theme(plot.title = element_text(face='bold'), \n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank(),\n        axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 10),\n        axis.text.y = element_text(size = 10, margin = margin(t = 0, r = -5, b = 0, l = 0)))\n        \n# reorder the axis\n# bold the axis labels\n```\n\n\n###  -  Service Requests\n\n```{r service requests, echo=FALSE}\n\n# Legal > no General \n# INFO > General Info QQQ\n\n# data prep\nconsul_serviceRequest <- data_consul %>%\n  select(Name, Assistance_Request__c) %>%\n  # split the Service Request column \n  separate(Assistance_Request__c, \n          c(\"Service1\", \"Service2\", \"Service3\", \"Service4\", \n            \"Service5\", \"Service6\", \"Service7\", \"Service8\",\n            \"Service9\", \"Service10\", \"Service11\", \"Service12\",\n            \"Service13\", \"Service14\", \"Service15\"),\n          \";\",\n          extra = \"drop\") \n\n# 1.1 data prep for x = Type of Requests & y = Number of Requests type of chart\ntbl_serviceRequest1 <- consul_serviceRequest %>%\n  ungroup() %>%\n  select(Service1:Service15) %>%\n  gather(Index, Service) %>%\n  select(Service) %>%\n  group_by(Service) %>%\n  mutate(NumberOfRequest = n()) %>%\n  distinct() %>%\n  arrange(desc(as.numeric(NumberOfRequest))) %>%\n  filter(!is.na(Service),\n         !(Service == \"\"))\n\nwrite.csv(tbl_serviceRequest1, 'ServiceRequested.csv')\n  \n# 1.2 plotting\nggplot(data = tbl_serviceRequest1, \n       aes(x = reorder(Service, NumberOfRequest), \n           y = NumberOfRequest)) +\n  coord_flip() +\n  geom_bar(stat=\"identity\", fill = \"#FEBE10\") +\n  geom_text(aes(x = reorder(Service, NumberOfRequest), \n                y = NumberOfRequest,\n                label = NumberOfRequest,\n                hjust=ifelse(sign(NumberOfRequest)>0, -0.2, 1))) + \n  labs(y = 'Number of Companies', x = '') +\n  ggtitle(\"Frequency of Services Requested\") +\n  theme(plot.title = element_text(face='bold'), \n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank(),\n        axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 10),\n        axis.text.y = element_text(size = 10, margin = margin(t = 0, r = -5, b = 0, l = 0)))\n\n\n\n# 2. Maybe less useful\n#    x = number of request made by one company; \n#    y = number of companies made that many requests\n#  tbl_serviceRequest2 <- consul_serviceRequest %>%\n#    ungroup() %>%\n#    gather(Name, Index, Service) %>%\n#    \n#  \n################## Keep working from here\n#  \n#  \n#  \n#  \n#  group_by(Assistance_Request__c) %>%\n#  summarise(NumberOfCompanies = n()) %>%\n#  arrange(desc(NumberOfCompanies))\n#  \n#  \n  \n```\n\n### Founder Employment Status\n\n```{r employment, echo=FALSE}\n\n# Data preparation\nconsul_emp_status <- data_consul %>%\n  rename(EmpStatus = Employment_Status__c) %>% \n  select(EmpStatus) %>%\n  group_by(EmpStatus) %>%\n  summarise(NumberOfFounders = n()) %>%\n  arrange(desc(NumberOfFounders)) %>%\n  filter(!(EmpStatus == \"\"))\n\n# Plotting\nggplot(data = consul_emp_status, \n       aes(x = reorder(EmpStatus, NumberOfFounders),\n           y = NumberOfFounders)) +\n  coord_flip() +\n  geom_bar(stat=\"identity\", fill = \"#FEBE10\") +\n  geom_text(aes(x = EmpStatus, \n                y = NumberOfFounders,\n                label = NumberOfFounders,\n                hjust=ifelse(sign(NumberOfFounders)>0, -0.2, 1))) + \n  labs(x = 'Number of Founders', y = 'Founder Employment Status') +\n  ggtitle(\"Founder's Employment Status at the time of Enterprise TO Engagement\") +\n  theme(plot.title = element_text(face='bold'), \n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank(),\n        axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 10),\n        axis.text.y = element_text(size = 10, margin = margin(t = 0, r = -5, b = 0, l = 0)))\n        \n# Q: how to size the chart in the final Word output?\n# need to make y-axis labels bold\n# need to reorder the y-axis labels\n```\n\n\n```{r How many people work in business }\n\n# Data preparation\nconsul_emp <- data_consul %>%\n  rename(Employees = How_Many_People_Work_in_Business_SS2__c) %>% \n  select(Employees) %>%\n  filter(!is.na(Employees)) %>%\n  group_by(Employees) %>%\n  summarise(NumberOfEmployees = n()) %>%\n  arrange(desc(NumberOfEmployees)) %>%\n  mutate(Percentage = NumberOfEmployees / sum(NumberOfEmployees)) %>%\n  mutate(Percentage = paste(round(100*Percentage, 1), \"%\", sep=\"\"))\n\nwrite.csv(consul_emp, \"Emp.csv\")\n\n\n```\n\n\n```{r explore the relation between age, industry and employment}\n\nconsul_emp_age <- data_consul %>%\n  select(How_Many_People_Work_in_Business_SS2__c, How_Many_Additional_Staff_SS2__c,\n         If_Yes_How_Many_Additional_2__c,\n         Business_Status__c, ET_Client_Status__c,\n         Age__c, \n         Business_Sector__c) %>%\n  rename(Before = How_Many_People_Work_in_Business_SS2__c, \n         Additional = How_Many_Additional_Staff_SS2__c, \n         Additional2 = If_Yes_How_Many_Additional_2__c, \n         Age = Age__c,\n         Business_Sector = Business_Sector__c,\n         Business_Status = Business_Status__c,\n         ET_Client_Status = ET_Client_Status__c\n         ) %>%\n  filter(!is.na(Before) | !is.na(Additional) | !is.na(Additional2)) %>%\n  replace(is.na(.), 0) %>%\n  mutate(After = rowSums(.[1:3])) %>%\n  select(Before, After, Business_Status, ET_Client_Status, Age, Business_Sector)\n\n\nwrite.csv(consul_emp_age, \"Emp: relation with other sets.csv\", row.names = FALSE)\n\n\n```\n\n\n\n\n\n\n```{r Before vs After Emp Chart}\n\ntbl_emp_beforeAfter <- data_consul %>%\n  select(How_Many_People_Work_in_Business_SS2__c, How_Many_Additional_Staff_SS2__c, If_Yes_How_Many_Additional_2__c,\n         Business_Status__c, ET_Client_Status__c, Id) %>%\n  rename(Before = How_Many_People_Work_in_Business_SS2__c, \n         Additional = How_Many_Additional_Staff_SS2__c, \n         Additional2 = If_Yes_How_Many_Additional_2__c) %>%\n  filter(!is.na(Before) | !is.na(Additional) | !is.na(Additional2)) %>%\n  replace(is.na(.), 0) %>%\n  mutate(After = rowSums(.[1:3])) %>%\n  select(Id, Before, After, Business_Status__c, ET_Client_Status__c)\n\ntbl_emp_beforeAfter_norm <- tbl_emp_beforeAfter %>%\n  mutate(Additional = After - Before) %>%\n  gather(TimeClass, NumberEmp, Before, After, Additional) \n\nwrite.csv(tbl_emp_beforeAfter_norm, \"Emp_BeforeAfter_norm.csv\", row.names = FALSE)\n\nwrite.csv(tbl_emp_beforeAfter, \"Emp_BeforeAfter.csv\", row.names = FALSE)\n\n```\n\n\n\n\nFor existing business, this is to see how long have they been in the market, how big are they\n\n```{r employment, echo=FALSE}\n\ntemp <- data_consul %>%\n  rename(BusinessStatus = Business_Status__c) %>%\n  filter(BusinessStatus == 'Existing') %>%\n  select(BusinessStatus, Number_of_Years_In_Business__c, \n         Number_Of_Employees__c, Business_Registration__c)\n\ntemp2 <- temp %>%\n  filter(!is.na(Number_of_Years_In_Business__c)) %>%\n  select(Number_of_Years_In_Business__c) %>%\n  summarize(mean(Number_of_Years_In_Business__c))\n\n### The average year in business is 5 years for existing businesses\n\ntemp3 <- temp %>%\n  filter(!is.na(Number_Of_Employees__c)) %>%\n  select(Number_Of_Employees__c) %>%\n  summarize(mean(Number_Of_Employees__c))\n  \ntemp4 <- temp %>%\n  filter(!is.na(Business_Registration__c)) %>%\n  filter(!(Business_Registration__c == \"\")) %>%\n  select(Business_Registration__c) %>%\n  group_by(Business_Registration__c) %>%\n  summarize(NumberOfBusinesses = n())\n### The average number of employees for existing business is 4 people\n```\n\n\n### To show their industry, location etc for clients who reported increased revenue / financing & more employees\n\nAre they businesses in earlier stage or later stage?\n```{r}\ntbl <- data_consul %>%\n  select(Business_Sector__c, \n         Number_Of_Employees__c,\n         Number_of_Years_In_Business__c,\n         Increased_Revenue_Since_Engaged_ET_SS3__c, \n         Increased_Financing_Since_Engaged_ET_SS3__c)\n\ntemp <- tbl %>%\n  filter(Increased_Revenue_Since_Engaged_ET_SS3__c == \"Yes\")\n\ntemp_emp <- tbl %>%\n  filter(Increased_Financing_Since_Engaged_ET_SS3__c == \"Yes\")\n  \n\n\n```\n\n\nExplore to see if there are any clients shared by SBEC and the RICs using CRA numbers - \n\n```{r}\n\ntbl_et_cra <- data_busreg %>%\n  select(Business.ID.Number.Corp.Number) %>%\n  rename(CRAnumber = Business.ID.Number.Corp.Number) %>%\n  filter(CRAnumber != '')\n\ntemp <- merge(tbl_et_cra, data_comp_qtly_cra.df, by.y = \"CRABusinessNumber_Clean\", by.x =  \"CRAnumber\")\n```\n\n\n\n\n\n\n\n## later - we could see what's available / useful in the follow-up surveys\n\n  B. Compare the Enterprise Toronto portforlio to the RIC portfolio\n  Year: \n     (find equivalent time span in the Annual / Quarterly data)\n\n\n\n2.\tSegmentation\n  A.\tWhere are outcomes concentrated?\n    -\tTop 10 – 50% clients by Job – summary on industry, location, etc\n    -\tTop 10 – 50% clients by Revenue – summary on industry, location, etc\n    -\tTop 10 – 50% clients by Capital – summary on industry, location, etc\n  B.\tWhat portion is better served by RICs / Field Services?\n    o\tHigh tech sector (by industry)\n    o\tLater stage (J, C, R) \n    o\tEtc? how to identify RIC clients?\n  C.\tIdentify segments: analysis on service patterns within segments?\n    Brainstorm here – analysis on service patterns within segments, into 2    segments?\n\n3.\tCorrelation\n  A.\tDoes more engagement mean more outcomes?\n  B.\t??\n  C.\t??\n4.\tRecommendations\n  a.\tWhat data to collect to better determine if portion of portfolio is   better served by RICs / field services: e.g. IP, patents, standardized   sectors, etc?\n  b.\tBack end validation:\n  c.\tIf we had identifiable data: I, ii, iii, iv, v\n  \n  \n  Things we could provide with better data: \n  1. If we have company name or CRA numbers - then we can do company matching, to see if there is any clients supported by both the RICs and the SBECs\n\n\n# How many percent of clients who went through consultation actually registered their service with ET\n",
    "created" : 1515185064609.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2660432418",
    "id" : "4EFF8154",
    "lastKnownWriteTime" : 1515185136,
    "last_content_update" : 1515185136971,
    "path" : "~/Box Sync/MDC Shared/Innovation Economy/Partnerships/SBEC/R codes/SBEC Pilot (wwang@marsdd.com).Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}